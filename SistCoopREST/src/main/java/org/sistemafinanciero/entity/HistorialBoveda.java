package org.sistemafinanciero.entity;

// Generated 02-may-2014 11:48:28 by Hibernate Tools 4.0.0

import java.math.BigInteger;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlElement;

import org.hibernate.validator.constraints.NotBlank;
import org.hibernate.validator.constraints.NotEmpty;

/**
 * HistorialBoveda generated by hbm2java
 */
@Entity
@Table(name = "HISTORIAL_BOVEDA", schema = "C##BDSISTEMAFINANCIERO")
@NamedQueries({ 
		@NamedQuery(name = HistorialBoveda.findByHistorialActivo, query = "SELECT h FROM HistorialBoveda h INNER JOIN h.boveda b WHERE b.idBoveda = :idboveda AND h.estado = TRUE"),
		@NamedQuery(name = HistorialBoveda.findByHistorialActivoPenultimo, query = "SELECT h FROM HistorialBoveda h INNER JOIN h.boveda b WHERE b.idBoveda = :idboveda AND h.estado = FALSE ORDER BY h.fechaCierre, h.horaCierre DESC")
	})
public class HistorialBoveda implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	public final static String findByHistorialActivo = "HistorialBoveda.findByHistorialActivo";
	public final static String findByHistorialActivoPenultimo = "HistorialBoveda.findByHistorialActivoPenultimo";

	private BigInteger idHistorialBoveda;
	private Boveda boveda;
	private Date fechaApertura;
	private Date fechaCierre;
	private Date horaApertura;
	private Date horaCierre;
	private int estado;
	private Set transaccionBovedaCajas = new HashSet(0);
	private Set detalleHistorialBovedas = new HashSet(0);
	private Set transaccionBovedaOtros = new HashSet(0);

	private String trabajador;
	
	public HistorialBoveda() {
	}

	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator="HISTORIALBOVEDA_SEQ")
	@SequenceGenerator(name="HISTORIALBOVEDA_SEQ", initialValue=1, allocationSize=1, sequenceName="HISTORIALBOVEDA_SEQ")
	@Id	
	@Column(name = "ID_HISTORIAL_BOVEDA", unique = true, nullable = false, precision = 22, scale = 0)
	public BigInteger getIdHistorialBoveda() {
		return this.idHistorialBoveda;
	}

	public void setIdHistorialBoveda(BigInteger idHistorialBoveda) {
		this.idHistorialBoveda = idHistorialBoveda;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_BOVEDA", nullable = false)
	public Boveda getBoveda() {
		return this.boveda;
	}

	public void setBoveda(Boveda boveda) {
		this.boveda = boveda;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "FECHA_APERTURA", nullable = false, length = 7)
	public Date getFechaApertura() {
		return this.fechaApertura;
	}

	public void setFechaApertura(Date fechaApertura) {
		this.fechaApertura = fechaApertura;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "FECHA_CIERRE", length = 7)
	public Date getFechaCierre() {
		return this.fechaCierre;
	}

	public void setFechaCierre(Date fechaCierre) {
		this.fechaCierre = fechaCierre;
	}

	@Column(name = "HORA_APERTURA", nullable = false)
	public Date getHoraApertura() {
		return this.horaApertura;
	}

	public void setHoraApertura(Date horaApertura) {
		this.horaApertura = horaApertura;
	}

	@Column(name = "HORA_CIERRE")
	public Date getHoraCierre() {
		return this.horaCierre;
	}

	public void setHoraCierre(Date horaCierre) {
		this.horaCierre = horaCierre;
	}

	@Column(name = "ESTADO", nullable = false, precision = 22, scale = 0)
	public boolean getEstado() {
		return (this.estado == 1 ? true : false);
	}

	public void setEstado(boolean estado) {
		this.estado = (estado ? 1 : 0);
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "historialBoveda")
	public Set<TransaccionBovedaCaja> getTransaccionBovedaCajas() {
		return this.transaccionBovedaCajas;
	}

	public void setTransaccionBovedaCajas(Set transaccionBovedaCajas) {
		this.transaccionBovedaCajas = transaccionBovedaCajas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "historialBoveda")
	public Set<DetalleHistorialBoveda> getDetalleHistorialBovedas() {
		return this.detalleHistorialBovedas;
	}

	public void setDetalleHistorialBovedas(Set detalleHistorialBovedas) {
		this.detalleHistorialBovedas = detalleHistorialBovedas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "historialBoveda")
	public Set<TransaccionBovedaOtro> getTransaccionBovedaOtros() {
		return this.transaccionBovedaOtros;
	}

	public void setTransaccionBovedaOtros(Set transaccionBovedaOtros) {
		this.transaccionBovedaOtros = transaccionBovedaOtros;
	}
	
	@XmlElement(name = "trabajador")
	@Column(name = "TRABAJADOR", columnDefinition = "nvarchar2")
	public String getTrabajador() {
		return this.trabajador;
	}

	public void setTrabajador(String trabajador) {
		this.trabajador = trabajador;
	}

}
