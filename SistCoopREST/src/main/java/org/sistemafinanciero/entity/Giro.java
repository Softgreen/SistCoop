package org.sistemafinanciero.entity;

// Generated 02-may-2014 11:48:28 by Hibernate Tools 4.0.0

import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;

import org.hibernate.validator.constraints.NotBlank;
import org.sistemafinanciero.entity.type.EstadoGiro;
import org.sistemafinanciero.entity.type.LugarPagoComision;

/**
 * Accionista generated by hbm2java
 */
@Entity
@Table(name = "GIRO", schema = "C##BDSISTEMAFINANCIERO")
@XmlRootElement(name = "giro")
@XmlAccessorType(XmlAccessType.NONE)
@NamedQueries({
        @NamedQuery(name = Giro.findEnviadosByIdAgenciaFilterText, query = "SELECT g FROM Giro g WHERE g.agenciaOrigen.idAgencia =:idAgencia AND (g.numeroDocumentoEmisor LIKE :filterText OR g.clienteEmisor LIKE :filterText OR g.numeroDocumentoReceptor LIKE :filterText OR g.clienteReceptor LIKE :filterText) ORDER BY g.fechaEnvio DESC"),
        @NamedQuery(name = Giro.findRecibidosByIdAgenciaFilterText, query = "SELECT g FROM Giro g WHERE g.agenciaDestino.idAgencia =:idAgencia AND (g.numeroDocumentoEmisor LIKE :filterText OR g.clienteEmisor LIKE :filterText OR g.numeroDocumentoReceptor LIKE :filterText OR g.clienteReceptor LIKE :filterText) ORDER BY g.fechaEnvio DESC"),
        @NamedQuery(name = Giro.findEnviadosByIdAgenciaEstadoFilterText, query = "SELECT g FROM Giro g WHERE g.agenciaOrigen.idAgencia =:idAgencia AND g.estado = :estado AND (g.numeroDocumentoEmisor LIKE :filterText OR g.clienteEmisor LIKE :filterText OR g.numeroDocumentoReceptor LIKE :filterText OR g.clienteReceptor LIKE :filterText) ORDER BY g.fechaEnvio DESC"),
        @NamedQuery(name = Giro.findRecibidosByIdAgenciaEstadoFilterText, query = "SELECT g FROM Giro g WHERE g.agenciaDestino.idAgencia =:idAgencia AND g.estado = :estado AND (g.numeroDocumentoEmisor LIKE :filterText OR g.clienteEmisor LIKE :filterText OR g.numeroDocumentoReceptor LIKE :filterText OR g.clienteReceptor LIKE :filterText) ORDER BY g.fechaEnvio DESC"),
        @NamedQuery(name = Giro.countEnviadosByIdAgencia, query = "SELECT COUNT(g) FROM Giro g WHERE g.agenciaOrigen.idAgencia =:idAgencia"),
        @NamedQuery(name = Giro.countRecibidosByIdAgencia, query = "SELECT COUNT(g) FROM Giro g WHERE g.agenciaDestino.idAgencia =:idAgencia") })
public class Giro implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    public final static String findEnviadosByIdAgenciaFilterText = "Giro.findEnviadosByIdAgenciaFilterText";
    public final static String findRecibidosByIdAgenciaFilterText = "Giro.findRecibidosByIdAgenciaFilterText";
    public final static String findEnviadosByIdAgenciaEstadoFilterText = "Giro.findEnviadosByIdAgenciaEstadoFilterText";
    public final static String findRecibidosByIdAgenciaEstadoFilterText = "Giro.findRecibidosByIdAgenciaEstadoFilterText";

    public final static String countEnviadosByIdAgencia = "Giro.countEnviadosByIdAgencia";
    public final static String countRecibidosByIdAgencia = "Giro.countRecibidosByIdAgencia";

    private BigInteger idGiro;

    private Agencia agenciaOrigen;
    private Agencia agenciaDestino;

    private String numeroDocumentoEmisor;
    private String clienteEmisor;

    private String numeroDocumentoReceptor;
    private String clienteReceptor;

    private Moneda moneda;
    private BigDecimal monto;
    private BigDecimal comision;
    private LugarPagoComision lugarPagoComision;
    private int estadoPagoComision;

    private Date fechaEnvio;
    private Date fechaDesembolso;

    private EstadoGiro estado;

    public Giro() {

    }

    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "GIRO_SEQ")
    @SequenceGenerator(name = "GIRO_SEQ", initialValue = 1, allocationSize = 1, sequenceName = "GIRO_SEQ")
    @XmlElement(name = "id")
    @Id
    @Column(name = "ID_GIRO", unique = true, nullable = false, precision = 22, scale = 0)
    public BigInteger getIdGiro() {
        return this.idGiro;
    }

    public void setIdGiro(BigInteger idGiro) {
        this.idGiro = idGiro;
    }

    @XmlElement(name = "agenciaOrigen")
    @NotNull
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "ID_AGENCIA_ORIGEN", nullable = false)
    public Agencia getAgenciaOrigen() {
        return agenciaOrigen;
    }

    public void setAgenciaOrigen(Agencia agenciaOrigen) {
        this.agenciaOrigen = agenciaOrigen;
    }

    @XmlElement(name = "agenciaDestino")
    @NotNull
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "ID_AGENCIA_DESTINO", nullable = false)
    public Agencia getAgenciaDestino() {
        return agenciaDestino;
    }

    public void setAgenciaDestino(Agencia agenciaDestino) {
        this.agenciaDestino = agenciaDestino;
    }

    @XmlAttribute(name = "numeroDocumentoEmisor")
    @Size(min = 0, max = 20)
    @Column(name = "NUMERO_DOCUMENTO_EMISOR", nullable = false, length = 40, columnDefinition = "nvarchar2")
    public String getNumeroDocumentoEmisor() {
        return numeroDocumentoEmisor;
    }

    public void setNumeroDocumentoEmisor(String numeroDocumentoEmisor) {
        this.numeroDocumentoEmisor = numeroDocumentoEmisor;
    }

    @XmlAttribute(name = "numeroDocumentoReceptor")
    @Size(min = 0, max = 20)
    @Column(name = "NUMERO_DOCUMENTO_RECEPTOR", nullable = false, length = 40, columnDefinition = "nvarchar2")
    public String getNumeroDocumentoReceptor() {
        return numeroDocumentoReceptor;
    }

    public void setNumeroDocumentoReceptor(String numeroDocumentoReceptor) {
        this.numeroDocumentoReceptor = numeroDocumentoReceptor;
    }

    @XmlAttribute(name = "clienteEmisor")
    @NotNull
    @NotBlank
    @Size(min = 1, max = 200)
    @Column(name = "CLIENTE_EMISOR", nullable = false, length = 200, columnDefinition = "nvarchar2")
    public String getClienteEmisor() {
        return clienteEmisor;
    }

    public void setClienteEmisor(String clienteEmisor) {
        this.clienteEmisor = clienteEmisor;
    }

    @XmlAttribute(name = "clienteReceptor")
    @NotNull
    @NotBlank
    @Size(min = 1, max = 200)
    @Column(name = "CLIENTE_RECEPTOR", nullable = false, length = 200, columnDefinition = "nvarchar2")
    public String getClienteReceptor() {
        return clienteReceptor;
    }

    public void setClienteReceptor(String clienteReceptor) {
        this.clienteReceptor = clienteReceptor;
    }

    @XmlElement
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "ID_MONEDA", nullable = false)
    public Moneda getMoneda() {
        return moneda;
    }

    public void setMoneda(Moneda moneda) {
        this.moneda = moneda;
    }

    @XmlElement
    @Column(name = "MONTO", nullable = false, precision = 18)
    public BigDecimal getMonto() {
        return monto;
    }

    public void setMonto(BigDecimal monto) {
        this.monto = monto;
    }

    @XmlElement
    @Column(name = "COMISION", nullable = false, precision = 18)
    public BigDecimal getComision() {
        return comision;
    }

    public void setComision(BigDecimal comision) {
        this.comision = comision;
    }

    @XmlElement
    @Enumerated(EnumType.STRING)
    @Column(name = "LUGAR_PAGO_COMISION", nullable = false, length = 20, columnDefinition = "nvarchar2")
    public LugarPagoComision getLugarPagoComision() {
        return lugarPagoComision;
    }

    public void setLugarPagoComision(LugarPagoComision lugarPagoComision) {
        this.lugarPagoComision = lugarPagoComision;
    }

    @XmlElement
    @Column(name = "ESTADO_PAGO_COMISION", nullable = false, precision = 22, scale = 0)
    public boolean getEstadoPagoComision() {
        return (this.estadoPagoComision == 1 ? true : false);
    }

    public void setEstadoPagoComision(boolean estadoPagoComision) {
        this.estadoPagoComision = (estadoPagoComision ? 1 : 0);
    }

    @XmlElement
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "FECHA_ENVIO", nullable = false, length = 7)
    public Date getFechaEnvio() {
        return fechaEnvio;
    }

    public void setFechaEnvio(Date fechaEnvio) {
        this.fechaEnvio = fechaEnvio;
    }

    @XmlElement
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "FECHA_DESEMBOLSO", nullable = false, length = 7)
    public Date getFechaDesembolso() {
        return fechaDesembolso;
    }

    public void setFechaDesembolso(Date fechaDesembolso) {
        this.fechaDesembolso = fechaDesembolso;
    }

    @XmlElement
    @Enumerated(EnumType.STRING)
    @Column(name = "ESTADO", nullable = false, length = 20, columnDefinition = "nvarchar2")
    public EstadoGiro getEstado() {
        return this.estado;
    }

    public void setEstado(EstadoGiro estado) {
        this.estado = estado;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((idGiro == null) ? 0 : idGiro.hashCode());
        return result;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        Giro other = (Giro) obj;
        if (idGiro == null) {
            if (other.idGiro != null)
                return false;
        } else if (!idGiro.equals(other.idGiro))
            return false;
        return true;
    }

}
