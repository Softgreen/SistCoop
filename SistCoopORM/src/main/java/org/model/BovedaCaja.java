package org.model;

// Generated 02-may-2014 11:48:28 by Hibernate Tools 4.0.0

import java.math.BigDecimal;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.validation.constraints.DecimalMin;
import javax.validation.constraints.Digits;
import javax.validation.constraints.Min;
import javax.validation.constraints.NotNull;

import org.hibernate.annotations.NaturalId;

/**
 * BovedaCaja generated by hbm2java
 */
@Entity
@Table(name = "BOVEDA_CAJA", schema = "BDSISTEMAFINANCIERO")
public class BovedaCaja implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	private BovedaCajaId id;
	private Caja caja;
	private Boveda boveda;
	private BigDecimal saldo;

	public BovedaCaja() {
	}

	@NotNull
	@EmbeddedId
	@AttributeOverrides({ @AttributeOverride(name = "idBoveda", column = @Column(name = "ID_BOVEDA", nullable = false)), @AttributeOverride(name = "idCaja", column = @Column(name = "ID_CAJA", nullable = false)) })
	public BovedaCajaId getId() {
		return this.id;
	}

	public void setId(BovedaCajaId id) {
		this.id = id;
	}

	@NotNull
	@NaturalId
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_CAJA", nullable = false, insertable = false, updatable = false, foreignKey = @ForeignKey)
	public Caja getCaja() {
		return this.caja;
	}

	public void setCaja(Caja caja) {
		this.caja = caja;
	}

	@NotNull
	@NaturalId
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_BOVEDA", nullable = false, insertable = false, updatable = false, foreignKey = @ForeignKey)
	public Boveda getBoveda() {
		return this.boveda;
	}

	public void setBoveda(Boveda boveda) {
		this.boveda = boveda;
	}

	@NotNull
	@Min(value = 0)
	@DecimalMin(value = "0", inclusive = true)
	@Digits(integer = 18, fraction = 2)
	@Column(name = "SALDO", nullable = false)
	public BigDecimal getSaldo() {
		return this.saldo;
	}

	public void setSaldo(BigDecimal saldo) {
		this.saldo = saldo;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((boveda == null) ? 0 : boveda.hashCode());
		result = prime * result + ((caja == null) ? 0 : caja.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		BovedaCaja other = (BovedaCaja) obj;
		if (boveda == null) {
			if (other.boveda != null)
				return false;
		} else if (!boveda.equals(other.boveda))
			return false;
		if (caja == null) {
			if (other.caja != null)
				return false;
		} else if (!caja.equals(other.caja))
			return false;
		return true;
	}

}
